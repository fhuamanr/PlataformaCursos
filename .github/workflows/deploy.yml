name: Deploy PlataformaCursos App

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: EC2 Deployment
    runs-on: ubuntu-latest

    steps:
      # Step 1: Clonar el repositorio
      - uses: actions/checkout@v2

      # Step 2: Configurar SSH para EC2
      - name: Set up SSH
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
          eval $(ssh-agent -s)
          ssh-add private_key

      # Step 3: Desplegar el c√≥digo, activar entorno virtual, e instalar dependencias
      - name: Deploy and Install Dependencies
        env:
          IP_ADDRESS: ${{ secrets.EC2_IP }}
          USER_NAME: ${{ secrets.EC2_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${IP_ADDRESS} '
          cd /home/ec2-user/PlataformaCursos &&
          git fetch origin master &&
          git reset --hard FETCH_HEAD &&
          git clean -fd &&
          source /home/ec2-user/PlataformaCursos/bin/activate &&  # Activar entorno virtual
          pip install -r requirements.txt &&
          python manage.py migrate'  # Ejecutar migraciones

      # Step 4: Ejecutar las pruebas unitarias
      - name: Run Unit Tests
        env:
          IP_ADDRESS: ${{ secrets.EC2_IP }}
          USER_NAME: ${{ secrets.EC2_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${IP_ADDRESS} '
          cd /home/ec2-user/PlataformaCursos &&
          source /home/ec2-user/PlataformaCursos/bin/activate &&  # Activar entorno virtual
          python manage.py test'

      # Step 5: Reiniciar Gunicorn
      - name: Restart Gunicorn Service
        env:
          IP_ADDRESS: ${{ secrets.EC2_IP }}
          USER_NAME: ${{ secrets.EC2_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${IP_ADDRESS} '
          sudo systemctl restart plataformacursos.service'